#pragma once

/*-----------------------------------------------------------------
* jmp_parms.h
* Header file with type definitions supporting 
* the C language scoring code generated by JMP
*
* Required by customer code (included by jmp_score.h).
* Required when compiling JMP-generated C language scoring code.
*-----------------------------------------------------------------*/

enum typetag {
  char_type,     /* for data of type char *            */
  inum_type,     /* for data of integral type          */
  fnum_type
};    /* for data of floating point type    */

struct MetadataCounts {
  int creatorLen;
  int modelNameLen;
  int predictedLen;
  int tableNameLen;
  int versionLen;
  int timestampLen;
  int maxInputNameLen;
  int maxOutputNameLen;
  int numInputs;
  int numOutputs;
};

typedef struct MetadataCounts COUNTS;

struct ModelMetadata {
  char *creator;
  char *modelName;
  char *predicted;
  char *tableName;
  char *version;
  char *timestamp;
};

typedef struct ModelMetadata MODELMD;

struct FieldMetadata {
  char *name;
  enum typetag type;
  int datalen;
};

typedef struct FieldMetadata FIELDMD;

struct ParmData {
  union {
    char * str;
    long   inum;
    double fnum;
  } data;
  int  datalen;              /* optional length of data field      */
  enum typetag type;         /* optional type of data field        */
};

typedef struct ParmData PARM;


